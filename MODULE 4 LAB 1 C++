CODE 1 CLUMSY FACTORIAL
#include <bits/stdc++.h>
using namespace std;
void clumsy(int n) {
        char op[4] = {'*', '/', '+', '-'};
        stack<int>st;
        st.push(n--);
        int ind = 0;
        while(n > 0) {
            int top = st.top();
            st.pop();
            if(op[ind] == '*')st.push(top * n--);
            else if(op[ind] == '/')st.push(top / n--);
            else if(op[ind] == '+')st.push(top + n--);
            else st.push(top), st.push((-1 * n--));
            ind = (ind + 1) % 4;
        }
        int sum = 0;
        while(!st.empty()) sum += st.top(), st.pop();
        cout<<sum;
    }


int main() {
int num;
cin>>num;
clumsy(num);

}


CODE 2 ARRAY MANIPULATION

question
For example, let's consider the following scenario: q = {[2,4,5],[3,6,3],[1,7,10]} Initial Array size = 7

Array: [0, 0, 0, 0, 0, 0, 0]

Operations:

Add 5 between indices 2 and 4: [0, 5, 5, 5, 0, 0, 0]
Add 3 between indices 3 and 6: [0, 5, 8, 8, 3, 3, 0]
Add 10 between indices 1 and 7: [10, 15, 18, 18, 13, 13, 10]
In this scenario, the maximum value in the array is 18.

Important Note: Ensure that you save your solution before progressing to the next question and before submitting your answer.

Exercise-1

Input:

5 3 2 4 3 4 5 9 3 3 11

Output: 14

Note: Line -1 : array size Line -2 : query count

Exercise-2

Input:

10 3 3 10 3 4 5 9 2 9 11

Output: 23





code
#include <iostream>
#include <vector>

using namespace std;

// Function to update the array with a given query
void updateArray(vector<int>& arr, int start, int end, int value) {
    for (int i = start - 1; i < end; i++) {
        arr[i] += value;
    }
}

// Function to find the maximum value in the array
int findMaxValue(const vector<int>& arr) {
    int max_value = arr[0];
    for (int i = 1; i < arr.size(); i++) {
        if (arr[i] > max_value) {
            max_value = arr[i];
        }
    }
    return max_value;
}

int main() {
    int array_size, query_count;
    cin >> array_size >> query_count;

    vector<int> myArray(array_size, 0);

    for (int i = 0; i < query_count; i++) {
        int start, end, value;
        cin >> start >> end >> value;
        updateArray(myArray, start, end, value);
    }

    int max_value = findMaxValue(myArray);
    cout << max_value << endl;

    return 0;
}

                                                                                                                            
